services:
  flask:
    build:
      context: ./app
    container_name: flask
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - FLASK_APP=${FLASK_APP}
      - FLASK_DEBUG=${FLASK_DEBUG}
      - PYTHONPATH=${PYTHONPATH}
    volumes:
      - ./app:/usr/app
    ports:
      - "3000:80"
    command: >
      bash -c "flask run --host=0.0.0.0 --port=80"

  database:
    image: docker.io/library/postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_KC_USER=${POSTGRES_KC_USER}
      - POSTGRES_KC_PASSWORD=${POSTGRES_KC_PASSWORD}
    volumes:
      - ${POSTGRES_DATABASE_DIRECTORY}:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U keycloak" ]
      interval: 5s
      timeout: 3s
      retries: 5

  auth:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    environment:
      - KC_HEALTH_ENABLED=${KC_HEALTH_ENABLED}
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KC_BOOTSTRAP_ADMIN_USERNAME}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KC_BOOTSTRAP_ADMIN_PASSWORD}
      - KC_DB=${KC_DB}
      - KC_DB_URL=${KC_DB_URL}
      - KC_DB_USERNAME=${KC_DB_USERNAME}
      - KC_DB_PASSWORD=${KC_DB_PASSWORD}
      - JDBC_PARAMS=${JDBC_PARAMS}
    command: start-dev

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
